<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <string name="menu_grapher">Графер by Math_way</string>
    <string name="nav_help">Помощь</string>
    <string name="nav_settings">Настройки</string>
    <string name="nav_resize">Масштаб</string>
    <string name="nav_timer">Таймер</string>
    <string name="graphics">Графики</string>
    <string name="functions">Функции</string>
    <string name="calculator">Счетчик</string>
    <string name="update">Обновить</string>
    <string name="converting">Парсинг..</string>
    <string name="updater_errors_two_funcs">Нужны 2 функции в параметре и транслировании.</string>
    <string name="updater_errors_params">Нужна переменная t или x и y в %d графике</string>
    <string name="saved">сохранено</string>
    <string name="loaded">загружено</string>
    <string name="updater_errors_recursion">Слишком длинная \'goto\' рекурсия: длина</string>
    <string name="updating">Пересчет..</string>
    <string name="parser_errors_0">Непонятный сомвол \'%s\'</string>
    <string name="parser_errors_1">%s в %s</string>
    <string name="parser_errors_2">Слишком мало аргументов</string>
    <string name="parser_errors_3">Слишком много аргументов</string>
    <string name="parser_errors_4">Криво размещены(а) %s</string>
    <string name="parser_errors_5">скобки</string>
    <string name="parser_errors_6">Переменные и лямбды могут быть в $..$: \'%s\'</string>
    <string name="calculator_errors_0" formatted="true">%s в \'%s\' %s</string>
    <string name="calculator_errors_1" formatted="true">%s в калькуляторе</string>
    <string name="calculator_errors_2" formatted="true">%s в грамматике \'%s\' %s</string>
    <string name="calculator_errors_3">графике</string>
    <string name="calculator_errors_4">функции</string>
    <string name="calculator_errors_5">Слишком много переменнных</string>
    <string name="calculator_errors_6">константе</string>
    <string name="timer_dur_fps">Секунды : ФПС</string>
    <string name="dimension">Диапазон от : до</string>
    <string name="timer_boomerang_off">Прыжок</string>
    <string name="timer_boomerang_on">Бумеранг</string>
    <string name="simple_error">Невозможно разпознать ввод</string>
    <string name="clear">Очистить</string>
    <string name="rollback">Откатить</string>
    <string name="net_width">Ширина сетки</string>
    <string name="load">Загрузить</string>
    <string name="save">Сохранить</string>
    <string name="quick_save">Быстрое сохранение</string>
    <string name="discretization">Дискретизация</string>
    <string name="feels_time">Чувтсвует время</string>
    <string name="set_color">Цвет</string>
    <string name="update_on_ask">Обновлять по запросу</string>
    <string name="function">Функция</string>
    <string name="parametric">Параметрическое</string>
    <string name="implicit">Неявное задание</string>
    <string name="translation">Транслирование</string>
    <string name="sensitivity">Чувствительность</string>
    <string name="save_picture">Сохранить картинку</string>
    <string name="infrared_imager">Тепловизор</string>
    <string name="rainbow">Радуга</string>
    <string name="lines_per_cell">Линий в клетке</string>
    <string name="using_help">Помощь пользования</string>
    <string name="calculator_help">Помощь с калькулятором</string>
    <string name="extra_info">Дополнительная информация</string>
    <string name="version_log">Лог версий</string>
    <string name="permission_internet">Лог лежит на гитхабе.. \nразрешите скачать его</string>
    <string name="loading_log">Загрузка лога..</string>
    <string-array name="helpers">
        <item>help 11</item>
        <item>Нарисовать график</item>
        <item>Нажмите \"+\" и напишите функцию\nв появиввшемся текстовом поле\nЗатем нажмите Enter.\n</item>
        <item>Таймер:</item>
        <item>Напишите выражение для графика,\nиспользуя переменную \'tm\',\nзатем нажмите \'Таймер\' и кликните\n\'Начать\' в открывшейся панели.\nМожете настроить таймер в этой панели.\nТак же можете нажать правой кнопкой мыши по\nкнопке \'Таймер\', чтобы запустить или остановить его.\n</item>
        <item>Масштаб:</item>
        <item>\'Левый\' клик сравняет масштабы\nдвух осей.\n\'Правый\' клик по этой кнопке сменит её действие:\nОсь X/Ось Y - повороты колесика мыши\n/ жесты на тачпаде будут менять масштаб\nтолько Оси X/Оси Y.\n</item>
        <item>Дополнительно:</item>
        <item>\'Правый\' клик по кнопке \'-\' в поле графика\nоткроет панель дополнительной информации.\n</item>
        <item>Параметрическое задание:</item>
        <item>Используя переменную t,\nнапишите выражение для x, поставьте \':\'\nи напишите выражение для y, нажмите Enter.\n</item>
        <item>Неявное задание:</item>
        <item>Равенство:\nГрафер покажет цвет, где выражение верно.\n(Чувствительность - максимальная разность\nмежду двумя соседними пикселями вокруг нуля)\nf(x,y)=g(x,y)\nНеравенство:\nНапишите неравенство, используя x и y и Графер\nпокажет цвет там, где это выражение истинно.\nf(x,y)&lt;g(x,y)\nСпектр:\nНапишите функцию вида z(x, y) и Графер покажет цвет,\nкоторый зависит от значения выражения\nот синего до красного, как в тепловизоре, или\nот красного до фиолетового по радуге.\nЧувствительность - для контроля толщины радуги.\nz(x,y)\n</item>
        <item>Трансляция:</item>
        <item>Трансляция - изменение положения точки,\nНапишите выражения для x и y, в зависимости от\nначальных координат точки, разделите их \":\" -\nкак параметрическое задание,\nтолько вместо t x и y;\n</item>
        <item>Рекурсия:</item>
        <item>Вы можете исполизовать рекурсию,\nно будте осторожны: продолжительные\nрекурсии выбрасывают ошибки stack over flow.\n</item>
        <item>Лямбды:</item>
        <item>Вместо параметра функции напишите выражение для\nкакой-нибудь переменной в \'{..}\', например \'{x^2}\',\nесли используете внешние переменные или лямбды, напишите их\nв \'$..$\' перед скобками, например \'$x${x^y}\'.\nДалее в самой функции используйте \'f\' + \'буква\',\nкак функцию, например, \'fa(x)\', можете передавать эту\nфункцию в другие, написав ее в качестве параметра\nбез каких-либо скобок. \'func(fa, 4)\'\n</item>
        <item>Примеры:</item>
        <item>f(x)=if(x&lt;1,1,x*f(x-1)) - факториал\n2sin(t):cos(t) - рисует эллипс\ncos(t)*sin(tm*t):sin(t)*sin(tm*t) -\nполярные координаты r(a)=sin(tm*a)\ncos(x) + cos(y) - красивая картинка\nв функциях:\nderiv = (fa(x+d)-fa(x))/d\nd = 0.000001 - производная функции, используйте deriv({t^2}, x)\n</item>
        <item>Настройки:</item>
        <item>Изменение языка в настройках.\nЗдесь можно сохранить/загрузить проект.\nЛинии &lt;-> - минимальное расстояние между\nлиниями сетки графера,\nВставьте \'~\' перед числом и графер\nне будет показывать координаты\nКол-во графиков - сколько функций графиков\nотображается одновременно.\n</item>
        <item>help 7</item>
        <item>Как пользоваться?</item>
        <item>Введите пример в поле счетчика и нажмите Enter.\nНажмите правой кнопкой мыши на поле счетчика,\nчтобы сжать окно Графера.\nЕсли хотите, можете добавить свои собственные\nфункции и константы,\nИх можно написать в поле \'Функции\',\nотделяя их друг от друга нажатием Enter.\n</item>
        <item>Личные константы:</item>
        <item>В поле функций напишите\nимя константы + \"=\" + напишите пример.\nВы можете переопределять внутренние\nфункции и константы.\nКонстанты считаются в порядке, в котором записаны.\n</item>
        <item>Как писать личные функции?</item>
        <item>Напишите имя функции + \"=\" + выражение.\nВы можете вызывать переменные по этим именам:\nx; y; z; t; x + какая-нибудь буква, например x龙.\nСтроки без знака \"=\" считаются комментариями.\n</item>
        <item>Мат. знаки:</item>
        <item>+, -, *, / обычные знаки\n^ - возведение в степень\n% - остаток от деления\n&lt;, >, = возвращают 1, если выражение\nистинно, иначе 0\n</item>
        <item>Функции:</item>
        <item>sqrt, cbrt - квадратный и кубический корни\npow - возведение в степень\nexp - экспонента (работает быстрее, чем \"e^x\")\nsign - знак числа (-1, 0, 1)\nlg, ln, ld, log - логарифмы\nsigm - сигмоид - sigm(x) = 1 / (1 + e^-x)\nhypot - гипотенуза - sqrt(x^2 + y^2)\nsin, cos, tg, ctg,\narcsin, arccos, arctg, arcctg, arctgTwo,\nsh, ch, th, cth - тригонометрические функции,\nвстевьте \'d\' после названий\nчтобы конвертировать радианы в градусы\nabs - модуль числа\nfloor - наибольшее целое, меньше данного\nceil - наименьшее целое, больше данного\nround - округление по математическим правилам\nrandom - случайное значение от 0 до 1\nmin / max - меньшее/большее из нескольких данных\narr(idx, a...) - возвращает элемент данного массива \'a\'\nвозвращает длину массива, ести idx = -1\nif(x,y,z) - возвращает y если x не 0, иначе z\nifs(x) - возвращает 1, если x не 0, иначе 0\nмассивы: \'map\' из массивов значений\nset(x, y, val) - устан. значение в массив \'x\' на место \'y\',\nвозвращает это значение\nget(x, y) - возвращает значение из массива \'x\' на месте \'y\'\nfor(start, end, func) - выполняет \'func\' - лямбду, передает\nв неё целый индекс от start до end,\nвозвращает сумму возвращенных значений func.\nassert(x) - создает ошибку с параметром x\n</item>
        <item>Константы: (в СИ)</item>
        <item>pi - пи - 3.14\ne - экспонента = 2.71\nG - гравитационная постоянная = 6.67 * 10 ^ -11\nh - постоянная Планка = 6.63 * 10 ^ -34\nc - скорость света = 3 * 10 ^ 8\neps - диэлектрическая проницаемость = 8.85 * 10 ^ -12\nNA - число Авогадро = 6.02 * 10 ^ 23\nR - газовая постоянная = 8.31\nk - постоянная Больцмана = 1.38 * 10 ^ -23\nEARTH - масса Земли = 6 * 10 ^ 24\nSUN - масса Солнца = 2 * 10 ^ 30\nPROTON - масса протона = 1.67 * 10 ^ -27\nELCT - масса электрона = 9.1 * 10 ^ -31\neCHARGE - заряд электрона = 1.6 * 10 ^ -19\nau - астрономическая единица = 1.5 * 10 ^ 11\npc - парсек = 3.1 * 10 ^ 16\n</item>
        <item>Примеры:</item>
        <item>sqrt(4) == 2\npow(2, 4) == 16\nln(e) == 1\nlog(8, 2) == 3\narcsind(1) == 90\narctgTwo(1, 0) == pi / 2\nnum = sqrt(5) - num - константа\nlb = ld(x) - то же, что и ld(x)\n= логарифм из x по основанию 2\nmyfunc = sin(x) + cos(y) - используйте, как myfunc(x,y)\n</item>
        <item>help 6</item>
        <item>Предупреждение:</item>
        <item>Графер может некорректно отвечать\nна непонятные ему запросы, например,\nесли написать f(x)=c(x,x) и c=x+y\nграфер выведет ошибку, потому что все равно\nподумает, что c - это скорость света - константа.\nесли вы хотите переопределить константу,\nвстевьте перед \'=\' \':\',\nдля предыдущего примера напишите с:=x+y.\nТакже иногда происходит такое:\nf(x)=rx, r=2\nСлишком много аргумертов!\nr - функция, поэтому, если за ней подряд идет что-то\nещё, то считается, что это аргумент (sinx),\na у r нет аргументов.\nxr - целиком переменная, а xra (ra=2) - работает.\n</item>
        <item>Время вкл.:</item>
        <item>Если эта функция отключена, таймер не обновляет\nграфик, это увеличит производительность\nна тяжёлых анимациях.\nЕсли хотите обновлять график редко, используйте\nфункцию \'update_graphic(idx)\', Графер точно\nобновит график во время итерации таймера\nпосле вызова функции.\n</item>
        <item>Параметры:</item>
        <item>Если назвать константу \"lookX\" или \"lookY\",\nГрафер переместит камеру в эту позицию,\nточка (lookX; lookY) окажется посередине экрана.\nСоздайте константы \"scaleX\" и \"scaleY\", чтобы\nизменять приближение, scaleX/scaleY значат, что\nв единице графика scaleX/scaleY пикселей экрана.\nМожете использовать эти константы в своих\nформулах без инициализации.\nЕсли вы используете рекурсию констант,\n(для сохранения значения до следующей итерации\nтаймера), до определения константы будут равны 0.\nИспользуйте параметер \'goto\' чтобы поменять следующую\nсчитающуюся константу (константы нумеруются с 0)\nустановка \'goto\' значит, что следующая вычисляемая\nконстанта будет под номером \'goto\'.\nИспользуйте \'finish\' в выражении \'goto = finish\',\nчтобы преждевременно завершить итерацию,\n\'finish\' возвращает число вычисляемых констант.\nИспользуйте параметер \'gotoLen\', чтобы установить\nмаксимальное кол-во раз, которое \'goto\' может быть\nиспользовано за одно обновление или цикл таймера.\nview_movable - если 0, нельзя перемещать изображение\nнажимая кнопки мыши (но можно колесиком).\nИспользуйте getMouseX(), getMouseY(), isMousePressed()\nчтобы знать о мыши, координаты не обновляются,\nесли не isMousePressed().\n</item>
        <item>Лямбда в калькуляторе:</item>
        <item>Отправьте лямбда выражение в калькулятор, чтобы\nполучить более одного ответа. Лямбда от -1\nдолжна возвращать число ответов. Используйте \'arr\'\nкак главную функцию, например: \'{arr(x, 4, 5)}\'\nвернет \'4.0,5.0\'.\n</item>
        <item>Горячие клавиши:</item>
        <item>Ctrl + S/L - сохранить/загрузить проект\nв/из последний используемый файл\nCtrl + Shift + S/L - просто сохранить/загрузить проект\nКогда вы редактируете код в поле функций,\nиспользуйте следующие комбинации:\nCtrl + Enter - вместо \'Обновить\'\nShift + (Вверх/Вниз) - переместить строчку\nвверх или вниз\nCtrl + Shift + Del - удалить строчку\nCtrl + (Вверх/Вниз) - сузить/расширить поле\nTab - в главных полях поможет (не поможет)\nдописать имя функции или константы.\nCtrl + P - используйте комбинацию осторожно.\nОна рисует график мышкой на экране.\nКак она работает? - рисует все линии графика,\nно не рисует Неявные задания и буквы (цифры).\nРисование линии: перемещение мыши в начало линии,\nнаживание мишы, перемещение в конец, отжатие.\nУбедитесь что приложение поддерживает эту механику.\nЛевый верхний угол графика будет там,\nгде была мышь при активации функции, размер\nграфика такой же, как в графере.\n</item>
        <item>Сохранения:</item>
        <item>Все сохранения в формате xml в java properties.\nФайл состоит из нескольких параметров:\ncalculator - сохранено поле \"Счетчик\"\nfunctions - поле \"Функции\"\nresize_idx - способ масштабирования - число 0-3\ntimer_info - четыре числа, как в настройках таймера:\nдлительность:фпс и на новой строке интервал\nview_params - четыре числа, каждое на своей строке:\nlookX, lookY, scale x, scale y\nlook x и y - координаты центра изображения\nscale x и y - колличество пикселей экрана,\nкоторое помещается единице на графике\ngraphs_count - колличество графиков -\nлюбое натуральное число или 0\ngraphic+номер - поле графика\ngraphic_info+тот же номер - информация о графике:\n1) название графика - например f для f(x),\nсуть названия - определить цвет графика\nтам также может быть hex-значение цвета,\nнапример \'f ffff0000\' - \'имя aarrggbb\'\n2) дискретизация (натуральное число > 2)\n3) включено ли время (true/false)\n4) тип графика\n(Function/Parametric/Implicit/Translation)\nдальше зависит от самого графика\nесли Function, то ничего,\nесли Parametric, то интервал,\nесли Implicit, то Чувствительность и на следущей\nстроке вид радуги (0-радуга,1-тепловизор)\nесли Translation, то кол-во линий в клетке поля\nmain_settings - настройки приложения:\nпервая строка - расстояние между линиями\nвторая - язык, например \'Русский\'.\n</item>
    </string-array>
</resources>